# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  branches:
    include:
      - working
      - azure-pipelines
      - pipeline/*
  paths:
    include:
      - "*.py"
      - "*requirements.txt"
      - ".ado/CI-regression.yml"
    exclude:
      - dev
      - setup.*
      - ".ado/requirements.txt"

variables:
  PythonPackagePath: ORIGINALVALUE

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    Python310:
      python.version: '3.10'
    Python311:
      python.version: '3.11'
    Python312:
      python.version: '3.12'
steps:
- checkout: self
  path: $(System.TeamProject)
  displayName: 'checkout $(System.TeamProject)'

- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

# - script: |
#     cd $(System.DefaultWorkingDirectory)
#     export ParentDir=${PWD%/*}

#     echo Setting PythonPackagePath to $ParentDir/$(System.TeamProject)
#     echo "##vso[task.setvariable variable=PythonPackagePath;]$ParentDir/$(System.TeamProject)"

#   displayName: 'Set Package Path'

# - script: |
#     echo PythonPackagePath is $(PythonPackagePath)
    
#     echo Moving files from $(System.DefaultWorkingDirectory) to $(PythonPackagePath)
#     mv $(System.DefaultWorkingDirectory) $(PythonPackagePath)

#     echo SymLinking old Working Directory back in case needed
#     ln -s $(PythonPackagePath) $(System.DefaultWorkingDirectory)
#     ls -l $(System.DefaultWorkingDirectory)/..
#   displayName: 'Move Working Directory'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
    pip install -r tests/requirements.txt
  displayName: 'Install dependencies'
  # continueOnError: true

- script: |
    echo Working in:
    pwd

    pip install pytest pytest-azurepipelines
    pip install pytest-cov
    pytest --cov=. --cov-report=xml
  displayName: 'pytest'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(PythonPackagePath)/**/coverage.xml'